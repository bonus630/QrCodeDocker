<Button x:Class="br.com.Bonus630DevToolsBar.CustomControls.IconButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:br.com.Bonus630DevToolsBar.CustomControls"
             xmlns:converters="clr-namespace:br.com.Bonus630DevToolsBar.Converters"
             mc:Ignorable="d" >
    <Button.Resources>
        <ResourceDictionary>
            <!--<converters:ResourceToMediaImageConverter x:Key="mediaConverter"/>-->
            <converters:ImagePathConverter x:Key="mediaConverter"/>
            <converters:ImagePathConverterD x:Key="mediaConverterD"/>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style  TargetType="{x:Type local:IconButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{DynamicResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Default.Static.Foreground}"/>
                <Setter Property="CornerRadius" Value="0" />
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">

                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:IconButton}">
                            <Border CornerRadius="{TemplateBinding CornerRadius}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" x:Name="border" 
                                    BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <Grid>
                                    <ContentPresenter Visibility="Collapsed" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Image Name="Receiver" Source="{TemplateBinding Icon,Converter={StaticResource mediaConverter}}" />
                                    <!--<Image Source="{TemplateBinding Icon,Converter={StaticResource mediaConverter}}" Stretch="Fill" Margin="1"/>-->
                                    <!--Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"-->
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Static.Background}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.Foreground}"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                    <Setter Property="Foreground"  Value="{DynamicResource Button.Disabled.Foreground}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource TabItem.Selected.MouseOver.Background}"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Button.Resources>



</Button>

